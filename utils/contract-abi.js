const lipsumAbi = [
	'constructor()',
	'error ApprovalCallerNotOwnerNorApproved()',
	'error ApprovalQueryForNonexistentToken()',
	'error ApprovalToCurrentOwner()',
	'error ApproveToCaller()',
	'error BalanceQueryForZeroAddress()',
	'error MintToZeroAddress()',
	'error MintZeroQuantity()',
	'error OwnerQueryForNonexistentToken()',
	'error TransferCallerNotOwnerNorApproved()',
	'error TransferFromIncorrectOwner()',
	'error TransferToNonERC721ReceiverImplementer()',
	'error TransferToZeroAddress()',
	'error URIQueryForNonexistentToken()',
	'event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)',
	'event ApprovalForAll(address indexed owner, address indexed operator, bool approved)',
	'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',
	'event Refund(address indexed _sender, uint256 indexed _tokenId, uint256 _amount)',
	'event SetBaseUri(string uri)',
	'event SetMerkleRoot(bytes32 root)',
	'event SetRefundAddress(address refundAddress)',
	'event TogglePresaleStatus(bool presaleStatus)',
	'event TogglePublicSaleStatus(bool publicSaleStatus)',
	'event ToggleRefundCountdown(uint256 refundEndTime)',
	'event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)',
	'event Withdrawal(address to, uint256 amount)',
	'function approve(address to, uint256 tokenId)',
	'function balanceOf(address owner) view returns (uint256)',
	'function canBeRefunded(uint256 tokenId) view returns (bool)',
	'function getApproved(uint256 tokenId) view returns (address)',
	'function getRefundGuaranteeEndTime() view returns (uint256)',
	'function getRefundPrice(uint256) pure returns (uint256)',
	'function hasRefunded(uint256) view returns (bool)',
	'function hasRevokedRefund(uint256) view returns (bool)',
	'function isApprovedForAll(address owner, address operator) view returns (bool)',
	'function isOwnerMint(uint256) view returns (bool)',
	'function isRefundGuaranteeActive() view returns (bool)',
	'function lockMetadata()',
	'function locked() view returns (bool)',
	'function maxMintSupply() view returns (uint256)',
	'function maxUserMintAmount() view returns (uint256)',
	'function merkleRoot() view returns (bytes32)',
	'function mint(uint256 quantity) payable',
	'function mintPresale(uint256 quantity, bytes32[] proof) payable',
	'function mintPrice() view returns (uint256)',
	'function mintedAmount() view returns (uint256)',
	'function name() view returns (string)',
	'function numberMinted(address) view returns (uint256)',
	'function owner() view returns (address)',
	'function ownerMint(address to, uint256 quantity)',
	'function ownerOf(uint256 tokenId) view returns (address)',
	'function presaleActive() view returns (bool)',
	'function publicSaleActive() view returns (bool)',
	'function refund(uint256[] tokenIds)',
	'function refundAddress() view returns (address)',
	'function refundEndTime() view returns (uint256)',
	'function renounceOwnership()',
	'function resetTokenRoyalty(uint256 tokenId)',
	'function revokeRefund(uint256[] tokenIds)',
	'function royaltyInfo(uint256 _tokenId, uint256 _salePrice) view returns (address, uint256)',
	'function safeTransferFrom(address from, address to, uint256 tokenId)',
	'function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)',
	'function setApprovalForAll(address operator, bool approved)',
	'function setBaseURI(string uri)',
	'function setDefaultRoyalty(address receiver, uint96 feeNumerator)',
	'function setMaxUserMintAmount(uint256 _maxUserMintAmount)',
	'function setMerkleRoot(bytes32 _root)',
	'function setRefundAddress(address _refundAddress)',
	'function setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator)',
	'function supportsInterface(bytes4 interfaceId) view returns (bool)',
	'function symbol() view returns (string)',
	'function togglePresaleStatus()',
	'function togglePublicSaleStatus()',
	'function toggleRefundCountdown()',
	'function tokenURI(uint256 tokenId) view returns (string)',
	'function totalSupply() view returns (uint256)',
	'function transferFrom(address from, address to, uint256 tokenId)',
	'function transferOwnership(address newOwner)',
	'function withdraw()',
]

module.exports = {
	lipsumAbi,
}
